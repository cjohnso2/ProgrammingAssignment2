age <- c("39", "38", "34", "37", "3")
sample.dataframe <-data.frame(names, Occupation, gender, favfood, age)
write.xlsx(x = sample.dataframe, file = "test.excelfile.xlsx",
sheetName = "TestSheet", "Testsheet2", row.names = FALSE)
workbook.sheets workbook.test addDataFrame(x = sample.dataframe, sheet = workbook.test,
row.names = TRUE, startColumn = 4)
saveWorkbook(workbook.sheets, "test.excelfile.xlsx")
library(xlsx)
names <- c("Chawn", "Allen", "Chris", "Yanna", "Laila")
Occupation <- c("IT Tech", "Disability", "Analyst", "Teacher", "Unemployed")
gender <- c("Male", "Male", "Male", "Female", "Female")
favfood <- c("Steak", "Caribbean", "Thai", "Thai", "Spaghetti")
age <- c("39", "38", "34", "37", "3")
sample.dataframe <-data.frame(names, Occupation, gender, favfood, age)
write.xlsx(x = sample.dataframe, file = "test.excelfile.xlsx",
sheetName = "TestSheet", "Testsheet2", row.names = FALSE)
workbook.sheets workbook.test addDataFrame(x = sample.dataframe, sheet = workbook.test,
row.names = TRUE, startColumn = 4)
saveWorkbook(workbook.sheets, "test.excelfile.xlsx")
install.packages("rJava")
library()
library(xlsx)
names <- c("Chawn", "Allen", "Chris", "Yanna", "Laila")
Occupation <- c("IT Tech", "Disability", "Analyst", "Teacher", "Unemployed")
gender <- c("Male", "Male", "Male", "Female", "Female")
favfood <- c("Steak", "Caribbean", "Thai", "Thai", "Spaghetti")
age <- c("39", "38", "34", "37", "3")
sample.dataframe <-data.frame(names, Occupation, gender, favfood, age)
write.xlsx(x = sample.dataframe, file = "test.excelfile.xlsx",
sheetName = "TestSheet", "Testsheet2", row.names = FALSE)
workbook.sheets workbook.test addDataFrame(x = sample.dataframe, sheet = workbook.test,
row.names = TRUE, startColumn = 4)
saveWorkbook(workbook.sheets, "test.excelfile.xlsx")
library(rJava)
library(xlsx)
names <- c("Chawn", "Allen", "Chris", "Yanna", "Laila")
Occupation <- c("IT Tech", "Disability", "Analyst", "Teacher", "Unemployed")
gender <- c("Male", "Male", "Male", "Female", "Female")
favfood <- c("Steak", "Caribbean", "Thai", "Thai", "Spaghetti")
age <- c("39", "38", "34", "37", "3")
sample.dataframe <-data.frame(names, Occupation, gender, favfood, age)
write.xlsx(x = sample.dataframe, file = "test.excelfile.xlsx",
sheetName = "TestSheet", "Testsheet2", row.names = FALSE)
workbook.sheets workbook.test addDataFrame(x = sample.dataframe, sheet = workbook.test,
row.names = TRUE, startColumn = 4)
saveWorkbook(workbook.sheets, "test.excelfile.xlsx")
library(rJava)
library(xlsx)
names <- c("Chawn", "Allen", "Chris", "Yanna", "Laila")
Occupation <- c("IT Tech", "Disability", "Analyst", "Teacher", "Unemployed")
gender <- c("Male", "Male", "Male", "Female", "Female")
favfood <- c("Steak", "Caribbean", "Thai", "Thai", "Spaghetti")
age <- c("39", "38", "34", "37", "3")
sample.dataframe <-data.frame(names, Occupation, gender, favfood, age)
write.xlsx(x = sample.dataframe, file = "test.excelfile.xlsx",
sheetName = "TestSheet", "Testsheet2", row.names = FALSE)
workbook.sheets workbook.test addDataFrame(x = sample.dataframe, sheet = workbook.test,
row.names = TRUE, startColumn = 4)
saveWorkbook(workbook.sheets, "test.excelfile.xlsx")
library(rJava)
library(xlsx)
View(sample.dataframe)
sample.dataframe[2,4]
dim(sample.dataframe)
library(rJava)
Sys.getenv("JAVA_HOME")
if (Sys.getenv("JAVA_HOME")!="")
Sys.setenv(JAVA_HOME="")
library(rJava)
options(java.home="C:\\Program Files\\Java\\jre7\\")
library(rJava)
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 containing as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
time()
Sys.time()
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- c("October 17, 1986 08:24")
t3 <- c("October 17", "1986 08:24")
t3 <- c("October 17, 1996 08:24")
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M"
)
t4
class(t4)
t3 > Sys.time()
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
getwd()
list.files("specdata/")
fullfile <- list.files("specdata", full.names = TRUE)
fullfile
head(read.csv(fullfile[1]))
for (i in 1:5) {print(i)}
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
dat <-data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
for (i in 1:5) {
dat <- rbind(dat, read.csv(fullfile[i]))
}
str(dat)
for (i in 1:5) {
dat2 <- data.frame()
dat2 <- rbind(dat2, read.csv(files_full[i]))
}
str(dat2)
head(dat2)
for (i in 1:5) {
dat2 <- data.frame()
dat2 <- rbind(dat2, read.csv(fullfile[i]))
}
str(dat2)
head(dat2)
pollutemean <- function(directory, pollutant, id) {
files.list<- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files.list[i]))
}
dat_subset<- dat[which(dat[,"pollutant"]== pollutant),]
mean(dat_subset[,id], na.rm = TRUE)
}
pollutemean("specdata", "nitrate", 1:332)
pollutemean("specdata", "nitrate", 1:332)
pollutemean <- function(directory, pollutant, id = 1:332) {
files.list<- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files.list[i]))
}
dat_subset<- dat[which(dat[,"pollutant"]== pollutant),]
mean(dat_subset[,id], na.rm = TRUE)
}
pollutemean("specdata", "sulfate", 1)
pollutemean <- function(directory, pollutant, id = 1:332) {
files.list<- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files.list[i]))
}
dat_subset<- dat[which(dat[id,"pollutant"]== pollutant),]
mean(dat_subset[,id], na.rm = TRUE)
}
pollutemean("specdata", "sulfate", 1)
pollutemean <- function(directory, pollutant, id = 1:332) {
files.list<- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files.list[i]))
}
dat_subset<- dat[which(dat[id,"pollutant"]== pollutant),]
mean(dat_subset[pollutant,id], na.rm = TRUE)
}
pollutemean("specdata", "sulfate", 1)
files.list<- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files.list[i]))
}
fullfile
dat2
mean(dat2$sulfate)
mean(dat2$sulfate, na.rm = TRUE)
files.list<- list.files(directory, full.names = TRUE)
files.list<- list.files("directory"specdata, full.names = TRUE)
files.list<- list.files("specdata/", full.names = TRUE)
dat<- data.frame()
names(files.list)
colnames(files.list)
for (i in 1:5) {
dat <- rbind(dat, read.csv(files.list[i]))
}
names(DAT)
names(dat)
dat_subset<- dat[which(dat[,"nitrate"]==nitrate),]
dat_subset<- dat["nitrate"]
mean(dat_subset, na.rm = TRUE)
dat_subset
names(dat_subset)
mean(dat_subset[,1])
mean(dat_subset[,1], na.rm = TRUE)
dat_subset<- dat["nitrate"]
mean(dat_subset[,1], na.rm = TRUE)
pollutemean <- function(directory, pollutant, id = 1:332) {
files.list<- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files.list[i]))
}
dat_subset<- dat["pollutant"]
mean(dat_subset[pollutant,id], na.rm = TRUE)
}
pollutemean("specdata", "su;fate", 1:332)
pollutemean <- function(directory, pollutant, id = 1:332) {
files.list<- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:332) {
dat <- rbind(dat, read.csv(files.list[i]))
}
dat_subset<- dat[which(dat[id,"pollutant"]== pollutant),id]
mean(dat_subset[pollutant,id], na.rm = TRUE)
}
pollutemean("specdata", "su;fate", 1:332)
pollutemean <- function(directory, pollutant, id = 1:332) {
files.list<- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:332) {
dat <- rbind(dat, read.csv(files.list[i]))
}
dat_subset<- dat[which(dat["pollutant",]== pollutant),id]
mean(dat_subset[pollutant,id], na.rm = TRUE)
}
pollutemean("specdata", "su;fate", 1:332)
pollutemean <- function(directory, pollutant, id = 1:332) {
files.list<- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:332) {
dat <- rbind(dat, read.csv(files.list[i]))
}
dat_subset<- dat[which(dat["pollutant",id]== pollutant),id]
mean(dat_subset[pollutant,id], na.rm = TRUE)
}
pollutemean("specdata", "su;fate", 1:332)
mean(files.list,1:332, na.rm = TRUE)
mean(dat_subset[,1:332], na.rm = TRUE)
mean(dat_subset[,1], na.rm = TRUE)
mean(dat_subset[,1:332], na.rm = TRUE)
mean(dat_subset[,1], na.rm = TRUE)
?whle
?while
()
?which
names(dat)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- list.files(directory)
subsetFiles <- files[id]
for (i in subsetFiles) {
filepaths <- paste(directory,"/",i, sep='')
data1 <- read.csv(filepaths)
}
data1
good <- complete.cases(data1)
data2 <- data1[good, pollutant]
data2
}
pollutemean("specdata", "nitrate", 1:332)
pollutemean <- function(directory, pollutant, id = 1:332) {
files.list<- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:332) {
dat <- rbind(dat, read.csv(files.list[i]))
}
dat_subset<- dat[which(dat[,"pollutabt"]== pollutant),]
mean(dat_subset[, pollutant], na.rm = TRUE)
}
pollutemean("specdata", "nitrate", 1:332)
rm(all())
?all()
files.list<- list.files("specdata", full.names = TRUE)
dat <- data.frame()
for (i in 1:332) {
dat <- rbind(dat, read.csv(files.list[i]))
}
dat_subset<- dat[which(dat[,"nitrate"]== nitrate),]
names(dat)
dat_subset<- dat[which(dat[,"nitrate"]== nitrate),]
dat_subset<- dat[which(dat[,"nitrate"]),]
dat_subset<- dat[dat$nitrate,]
dat_subset
mean(dat_subset, na.rm = TRUE)
mean(dat_subset, ,na.rm = TRUE)
View(dat_subset)
dat_subset<- dat[dat$nitrate]
dat_subset<- dat[,dat$sulfate]
dat_subset<- dat[which(dat[,"sulfate"]== sulfate),]
names(dat)
pollutantmean <- function(directory, pollutant, id = 1:332) {
data = numeric()
for (i in id) {
newRead = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
data = c(data, newRead[[pollutant]])
}
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
data = numeric()
for (i in id) {
newRead = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
data = c(data, newRead[[pollutant]])
}
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
data = lapply(id, function(i) read.csv(paste(directory, "/", formatC(i,
width = 3, flag = "0"), ".csv", sep = ""))[[pollutant]])
return(mean(unlist(data), na.rm = TRUE))
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
data = numeric()
for (i in id) {
newRead = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
data = c(data, newRead[[pollutant]])
}
return(mean(data, na.rm = TRUE))
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 1:332)
pollutantmean("specdata", "sulfate", 1:332)
complete <- function(directory, id = 1:332) {
f <- function(i) {
data = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
sum(complete.cases(data))
}
nobs = sapply(id, f)
return(data.frame(id, nobs))
}
complete("specdata", c(2, 4, 8, 10, 12))
?read.csv
?paste
formatC()
?formatC
rm(dat)
rm(dat_subset)
rm(dat2)
rm(files.list)
rm(fullfile)
rm(i)
rm(pollutemean())
corr <- function(directory, threshold = 0) {
df = complete(directory)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
cr <- corr("specdata", 150)
cr
head(cr)
pollutemean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc<- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc<- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc<- complete("specdata",332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr<- corr("specdata")
cr<- sort(cr)
set.seed(868)
out<- round(cr[sample(length(cr),5)],4)
print(out)
cr<- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)1,4]))
out <- c(n, round(cr[sample(n, 5)] 1,4))
out <- c(n, round(cr[sample(n, 5)] ,4))
print(out)
cr<- corr("specdata", 2000)
n <- length(cr)
cr<- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
$lapply
?lapply
getwd()
my_wd <- setwd("\\\\cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Documents")
setwd("My Videos/")
getwd()
my_wd
setwd("H:\ProgrammingAssignment2")
setwd("H:/ProgrammingAssignment2")
getwd()
list.files()
load("cachematrix.R")
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
Get <- function() x
Setmatrix <- function(solve) m<<- solve
Getmatrix <- function() m
list(set=set, get=get, setmatrix=setmatrix, getmatrix=getmatrix)
}
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getmatrix()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
Matrix <- x$get()
M <- solve(matrix, ...)
x$setmatrix(m)
m
}
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getmatrix()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
Matrix <- x$get()
M <- solve(matrix, ...)
x$setmatrix(m)
m
}
makeCacheMatrix(matrix(1:6, 2, 2))
makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
Get <- function() x
setmatrix <- function(solve) m<<- solve
getmatrix <- function() m
list(set=set, get=get,
setmatrix = setmatrix,
getmatrix = getmatrix)
}
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix
my_matrix
my_matrix$get()
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix$get()
makeCacheMatrix(matrix(1:6, 2, 3))
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix$getmatrix()
my_matrix$setmatrix(matrix(1:4,2,2))
my_matrix$get()
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix$get()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(vector(C(1:4, 1)))
cacheSolve(x)
cacheSolve(matrix(1:4, 2, ))
